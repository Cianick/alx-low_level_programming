#!/bin/bash

# Create files with the provided data
echo -e '#!/bin/bash\ngcc -E $CFILE -o c' > 0-preprocessor

echo -e '#!/bin/bash\ngcc -c $CFILE' > 1-compiler

echo -e '#!/bin/bash\ngcc -S $CFILE' > 2-assembler

echo -e '#!/bin/bash\ngcc $CFILE -o cisfun' > 3-name

echo -e '#include<stdio.h>\n\nint main(void)\n{\n\tputs("\"Programming is like building a multilingual puzzle");\n\treturn (0);\n}' > 4-puts.c

echo -e '#include<stdio.h>\n\nint main(void)\n{\n\tprintf("with proper grammar, but the outcome is a piece of art,\\n");\n\treturn (0);\n}' > 5-printf.c

echo -e '#include<stdio.h>\n\nint main(void)\n{\n\tprintf("Size of a char: %d byte(s)\\n", sizeof(char));\n\tprintf("Size of an int: %d byte(s)\\n", sizeof(int));\n\tprintf("Size of a long int: %d byte(s)\\n", sizeof(long int));\n\tprintf("Size of a long long int: %d byte(s)\\n", sizeof(long long int));\n\tprintf("Size of a float: %d byte(s)\\n", sizeof(float));\n\treturn (0);\n}' > 6-size.c

echo -e '#!/bin/bash\ngcc -S -masm=intel $CFILE' > 100-intel

echo -e '#include <stdio.h>\n#include <unistd.h>\n\nint main(void)\n{\n\twrite(2, "and that piece of art is useful\\" - Dora Korpar, 2015-10-19\\n", 59);\n\treturn (1);\n}' > 101-quote.c

echo "Files created."

# Make the files executable
chmod +x 0-preprocessor 1-compiler 2-assembler 3-name 100-intel 101-quote.c

echo "Script execution completed."

